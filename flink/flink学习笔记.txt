典型的事务处理：数据--处理计算--数据库
OLAP：联机分析处理
OLTP：联机事务处理
将数据复制到数仓，再进行分析处理

第二代架构，有状态的流式处理：
lambda架构：用两套系统，同时保证低延迟和结果正确
事务 --批处理--应用层展示--保证结果正确
    --流处理--应用层展示--保证实时性

第三代架构：Flink
Storm：做到了低延迟，但是吞吐量小
Spark：微批处理，但是实时性低
Flink：高吞吐、低延迟、正确性

Flink的主要特点：
1、事件驱动。作为数据管道使用。
2、基于流的世界观。对于Spark来说，一切都是微批，对于Flink来说，一切都是流。
3、分层API。
4、支持事件时间。
5、保证精确一次性。
6、低延迟。毫秒级别的延迟。
7、与众多常用存储系统链接。
8、高可用、动态可扩展。

Spark Streaming 与 Flink区别：
1、世界观不一样。前者是一切都是批。后者一切都是流。
2、数据模型不一样。前者RDD、后者DataFlow
3、运行时架构。将DAG划分为Stage。Flink为标准的DataFlow模式。

Flink运行时架构。

运行时的组件：作业管理器、任务管理器、资源管理器、分发器（Dispatcher）。

JobManager的作用：
TaskManager的作用：

Yarn模式：

JomManager：将作业划分为JobGraph、TaskGraph，最终生成物理可执行图。
















